# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    api.username: "%env(API_USERNAME)%"
    api.password: "%env(API_PASSWORD)%"
    api.base_url: "%env(API_URL)%"
    sms.url: "%env(API_SMS_URL)%"
    sms.number: "%env(API_SMS_NUMBER)%"
    smtp.support_emails: "%env(SMTP_SUPPORT_EMAILS)%"
    smtp.host: "%env(SMTP_HOST)%"
    smtp.username: "%env(SMTP_USERNAME)%"
    smtp.password: "%env(SMTP_PASSWORD)%"
    smtp.port: "%env(SMTP_PORT)%"
    smtp.from: "%env(SMTP_FROM)%"

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    message.listener:
        class: App\EventListener\MessageExceptionListener
        tags:
            - { name: kernel.event_listener, event: kernel.exception, method: onKernelException }
    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
